{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","prevPage","nextPage","useState","isPrevDisabled","setIsPrevDisabled","isNextDisabled","setIsNextDisabled","current","last","Math","ceil","currentPagination","currentPage","lastPage","result","i","max","min","push","unshift","map","value","index","id","paginate","useEffect","length","className","type","onClick","disabled","item","style","backgroundColor","color","defaultProps","App","setCurrentPage","setPerPage","prevIndex","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"uMAYaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MAMI,IALJC,eAKI,MALM,EAKN,MAJJC,YAII,MAJG,EAIH,EAHJC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACMC,EAAUT,EACVU,EAAOC,KAAKC,KAAKd,EAAQC,GAgCzBc,EA9BW,SAACC,EAAqBC,GAGrC,IAFA,IAAMC,EAAS,GAGTC,EAAIN,KAAKO,IAAI,EAAIJ,EAAc,GACnCG,GAAKN,KAAKQ,IAAKJ,EAAW,EAAKD,EAAc,GAC7CG,GAAK,EAELD,EAAOI,KAAKH,GAgBd,OAbKH,EAAc,EAAK,GACtBE,EAAOK,QAAQ,OAGZP,EAAc,EAAMC,EAAW,GAClCC,EAAOI,KAAK,OAGdJ,EAAOK,QAAQ,GACE,IAAbN,GACFC,EAAOI,KAAKL,GAGPC,EAAOM,KAAI,SAACC,EAAOC,GAAR,MAAmB,CACnCD,QACAE,GAAID,EAAQ,MAIUE,CAASjB,EAASC,GAgB5C,OAdAiB,qBAAU,WACJ3B,IAASa,EAAkBA,EAAkBe,OAAS,GAAGL,MAC3Df,GAAkB,GAElBA,GAAkB,GAIlBF,IADEN,EAAO,MAKV,CAACA,IAGF,sBAAK6B,UAAU,aAAf,UACE,mBAAGA,UAAU,oBAAb,mBACM,EAAI9B,GAAWC,EAAO,GAD5B,cACoC,UAAAD,EAAUC,EAAOF,EAAWA,EAAaC,EAAUC,GADvF,eACoGF,KAGpG,sBAAK+B,UAAU,sBAAf,UACE,wBACEC,KAAK,SACLC,QAAS7B,EACT8B,SAAU3B,EACVwB,UAAU,0BAJZ,kBASA,qBAAKA,UAAU,4BAAf,SACGhB,EAAkBS,KAAI,SAAAW,GACrB,MAAmB,QAAfA,EAAKV,MAEL,mBAEEM,UAAU,2BAFZ,SAIGI,EAAKV,OAHDU,EAAKR,IASd,wBAEEK,KAAK,SACLI,MAAOlC,IAASiC,EAAKV,MACjB,CACAY,gBAAiB,sBACjBC,MAAO,QAEP,CAAED,gBAAiB,uBACvBJ,QAAS,WACP9B,GAAcgC,EAAKV,OACA,IAAfU,EAAKV,MACPjB,GAAkB,GAElBA,GAAkB,GAGhB2B,EAAKV,QAAUb,EACjBF,GAAkB,GAElBA,GAAkB,IAGtBqB,UAAU,qBAvBZ,SAyBGI,EAAKV,OAxBDU,EAAKR,SA8BlB,wBACEK,KAAK,SACLC,QAAS5B,EACT6B,SAAUzB,EACVsB,UAAU,0BAJZ,yBAaRhC,EAAWwC,aAAe,CACxBtC,QAAS,EACTC,KAAM,GC/ID,IAAMsC,EAAgB,WAC3B,MAAsClC,mBAAS,GAA/C,mBAAOU,EAAP,KAAoByB,EAApB,KACA,EAA8BnC,mBAAS,GAAvC,mBAAOL,EAAP,KAAgByC,EAAhB,KAcA,OACE,sBAAKX,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,wBAIA,cAAC,EAAD,CACE/B,MAAO,GACPC,QAASA,EACTC,KAAMc,EACNb,aAtBe,SAACuB,GACpBe,EAAef,IAsBXtB,SAnBW,WACfqC,GAAe,SAACE,GAAD,OAAgBA,EAAY,MAmBvCtC,SAhBW,WACfoC,GAAe,SAACE,GAAD,OAAgBA,EAAY,QAkBzC,+BACE,wBAAOZ,UAAU,MAAjB,+BAEE,yBACEN,MAAOxB,EACP2C,SAAU,SAACC,GACTH,GAAYG,EAAMC,OAAOrB,OACzBgB,EAAe,IAEjBV,UAAU,cANZ,UAQE,wBAAQN,MAAM,IAAd,eAIA,wBAAQA,MAAM,IAAd,eAIA,wBAAQA,MAAM,KAAd,gBAIA,wBAAQA,MAAM,KAAd,4BCvDZsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d1ede9c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage?: number;\n  page?: number;\n  onPageChange: (index: number) => void;\n  prevPage: () => void;\n  nextPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage = 5,\n  page = 1,\n  onPageChange,\n  prevPage,\n  nextPage,\n}) => {\n  const [isPrevDisabled, setIsPrevDisabled] = useState(true);\n  const [isNextDisabled, setIsNextDisabled] = useState(false);\n  const current = page;\n  const last = Math.ceil(total / perPage);\n\n  const paginate = (currentPage: number, lastPage: number) => {\n    const result = [];\n\n    for (\n      let i = Math.max(2, (currentPage - 1));\n      i <= Math.min((lastPage - 1), (currentPage + 1));\n      i += 1\n    ) {\n      result.push(i);\n    }\n\n    if ((currentPage - 1) > 2) {\n      result.unshift('...');\n    }\n\n    if ((currentPage + 1) < (lastPage - 1)) {\n      result.push('...');\n    }\n\n    result.unshift(1);\n    if (lastPage !== 1) {\n      result.push(lastPage);\n    }\n\n    return result.map((value, index) => ({\n      value,\n      id: index + 1,\n    }));\n  };\n\n  const currentPagination = paginate(current, last);\n\n  useEffect(() => {\n    if (page === currentPagination[currentPagination.length - 1].value) {\n      setIsNextDisabled(true);\n    } else {\n      setIsNextDisabled(false);\n    }\n\n    if (page > 1) {\n      setIsPrevDisabled(false);\n    } else {\n      setIsPrevDisabled(true);\n    }\n  }, [page]);\n\n  return (\n    <div className=\"pagination\">\n      <p className=\"pagination__title\">\n        {`${1 + perPage * (page - 1)} - ${perPage * page > total ? `${total}` : `${perPage * page}`} of ${total}`}\n      </p>\n\n      <div className=\"pagination__buttons\">\n        <button\n          type=\"button\"\n          onClick={prevPage}\n          disabled={isPrevDisabled}\n          className=\"pagination__buttonarrow\"\n        >\n          &laquo;\n        </button>\n\n        <div className=\"pagination__buttons-pages\">\n          {currentPagination.map(item => {\n            if (item.value === '...') {\n              return (\n                <p\n                  key={item.id}\n                  className=\"pagination__buttons-dots\"\n                >\n                  {item.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                key={item.id}\n                type=\"button\"\n                style={page === item.value\n                  ? {\n                    backgroundColor: 'hsl(348, 100%, 61%)',\n                    color: '#fff',\n                  }\n                  : { backgroundColor: 'hsl(171, 100%, 41%)' }}\n                onClick={() => {\n                  onPageChange(+item.value);\n                  if (item.value === 1) {\n                    setIsPrevDisabled(true);\n                  } else {\n                    setIsPrevDisabled(false);\n                  }\n\n                  if (item.value === last) {\n                    setIsNextDisabled(true);\n                  } else {\n                    setIsNextDisabled(false);\n                  }\n                }}\n                className=\"pagination__button\"\n              >\n                {item.value}\n              </button>\n            );\n          })}\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={nextPage}\n          disabled={isNextDisabled}\n          className=\"pagination__buttonarrow\"\n        >\n          &raquo;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (index: number) => {\n    setCurrentPage(index);\n  };\n\n  const prevPage = () => {\n    setCurrentPage((prevIndex) => (prevIndex - 1));\n  };\n\n  const nextPage = () => {\n    setCurrentPage((prevIndex) => (prevIndex + 1));\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">\n        Pagination\n      </h1>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        page={currentPage}\n        onPageChange={onPageChange}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n\n      <form>\n        <label className=\"app\">\n          Items on the page:\n          <select\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n            className=\"app__select\"\n          >\n            <option value=\"3\">\n              3\n            </option>\n\n            <option value=\"5\">\n              5\n            </option>\n\n            <option value=\"10\">\n              10\n            </option>\n\n            <option value=\"20\">\n              20\n            </option>\n          </select>\n        </label>\n      </form>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}